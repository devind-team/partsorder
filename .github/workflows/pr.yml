name: Pull request
on:
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy:
    name: Deploy application
    runs-on: ubuntu-latest
    steps:
      - name: Settings ssh
        run: |
          sudo apt-get install openssh-client -y
          eval $(ssh-agent -s)
      - name: Create folder
        run: /bin/mkdir -p ~/.ssh
      - name: chmod
        run: chmod 700 ~/.ssh
      - name: echo key
        run: echo -e "${{ secrets.DEPLOY_KEY_PRIVATE }}" > ~/.ssh/id_rsa
      - name: chmod
        run: chmod 700 ~/.ssh/id_rsa
      - name: echo secret key
        run: |
          eval `ssh-agent -s`
          echo "${{ secrets.DEPLOY_KEY_PRIVATE }}" | tr -d '\r' | ssh-add -
      - name: Deploy application
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} ${{ secrets.DEPLOY_COMMAND }}
      - name: Deploy application
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY_PRIVATE }}
          port: ${{ secrets.DEPLOY_PORT }}
          script: whoami

  eslint-client:
    name: EsLint client
    runs-on: ubuntu-latest
    needs: [deploy]
    defaults:
      run:
        working-directory: client
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 19.8.1
      - uses: actions/checkout@v3
      - name: Install dependency
        run: npm i -g pnpm
      - name: Install dependency
        run: pnpm i
      - name: EsLint
        run: pnpm run lint

  test-client:
    name: Test client
    runs-on: ubuntu-latest
    needs: eslint-client
    defaults:
      run:
        working-directory: client
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 19.8.1
      - uses: actions/checkout@v3
      - name: Install dependency
        run: npm i -g pnpm
      - name: Install dependency
        run: pnpm i

  eslint-server:
    name: EsLint server
    runs-on: ubuntu-latest
    needs: [deploy]
    defaults:
      run:
        working-directory: server
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 19.8.1
      - uses: actions/checkout@v3
      - name: Install dependency
        run: npm i
      - name: EsLint
        run: npm run lint

  test-server:
    name: Test Server
    runs-on: ubuntu-latest
    needs: eslint-server
    defaults:
      run:
        working-directory: server
    env:
      SECRET_KEY: 'secret_key'
      DATABASE_URL: 'postgresql://postgres:1234@postgres:1234/partsorder'
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio12345678
      MINIO_END_POINT: minio
      MINIO_PORT: 9000
      MINIO_BUCKET: storage
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 19.8.1
      - uses: actions/checkout@v3
      - name: Install dependency
        run: npm i
      - name: Generate types
        run: npm run generate
      - name: Test
        run: npm run test
