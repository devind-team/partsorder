name: Release

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  eslint-client:
    name: EsLint client
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 19.8.1
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: yarn
      - name: EsLint
        run: yarn run lint

  test-client:
    name: Test client
    runs-on: ubuntu-latest
    needs: eslint-client
    defaults:
      run:
        working-directory: client
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 19.8.1
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: yarn

  build-client:
    name: Build client
    runs-on: ubuntu-latest
    needs: test-client
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extra metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/partsorder-client
      - name: Copy prettier & yarn.lock files
        run: cp ../.prettier .prettier && cp ../yarn.lock yarn.lock
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./client
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  eslint-server:
    name: EsLint server
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 19.8.1
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: yarn
      - name: EsLint
        run: yarn run lint

  test-server:
    name: Test Server
    runs-on: ubuntu-latest
    needs: eslint-server
    defaults:
      run:
        working-directory: server
    env:
      SECRET_KEY: 'secret_key'
      DATABASE_URL: 'postgresql://postgres:1234@postgres:1234/partsorder'
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio12345678
      MINIO_END_POINT: minio
      MINIO_PORT: 9000
      MINIO_BUCKET: storage
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 19.8.1
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: yarn
      - name: Generate types
        run: yarn run generate
      - name: Test
        run: yarn run test

  build-server:
    name: Build server
    runs-on: ubuntu-latest
    needs: test-server
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extra metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/partsorder-server
      - name: Copy prettier & yarn.lock files
        run: cp ../.prettier .prettier && cp ../yarn.lock yarn.lock
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./server
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
